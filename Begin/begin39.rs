// Ср 06 дек 2023 19:18:07 MSK
// Найти корни квадратного уравнения A*x^2+B*x+C=0, заданного своими 
// коэффициентами A, B, C(A не равен 0), если известно, что дискриминант 
// уравнения положителен. Вывести вначале меньший, а затем больший из 
// найденных корней. Корни квадратного уравнения находятся по формуле: 
// 'x(1,2)=(-B+-D^(1/2))/(2*A)', где D - дискриминант, равный 'B^2-4*A*C'. 

use std::io; 

fn main() { 
    // Получение от пользователя коэффициентов квадратного уравнения 
    println!("Введите коэффициент A(!=0) квадратного уравнения: "); 
    let a: String = read_user_line(); 
    println!("Введите коэффициент B квадратного уравнения: "); 
    let b: String = read_user_line(); 
    println!("Введите коэффициент C квадратного уравнения: "); 
    let c: String = read_user_line(); 

    // Приведение полученных данных из строк в числа 
    let a: f32 = str_to_num(a); 
    let b: f32 = str_to_num(b); 
    let c: f32 = str_to_num(c); 

    // Расчёт промежуточных значений 
    let d: f32 = b.powf(2.0)-4.0*a*c; 

    // Вывод искомых значений 
    println!("x1={}", ((-1.0*b)-d.sqrt())/(2.0*a)); 
    println!("x2={}", ((-1.0*b)+d.sqrt())/(2.0*a)); 
} 

// Функция получения строки от пользователя 
fn read_user_line() -> String { 
    let mut x = String::new(); 
    io::stdin().read_line(&mut x)
        .expect("Не удалось прочитать строку"); 
    return x; 
} 

// Функция перевода из строки в число 
fn str_to_num(x: String) -> f32 { 
    let x: f32 = x.trim().parse()
        .expect("Введите числовое значение"); 
    return x; 
} 
